\begin{Verbatim}[commandchars=\\\{\}]
\PYG{k+kn}{import} \PYG{n+nn}{concurrent.futures}
\PYG{k+kn}{import} \PYG{n+nn}{re}
\PYG{k+kn}{import} \PYG{n+nn}{pandas} \PYG{k}{as} \PYG{n+nn}{pd}
\PYG{k+kn}{from} \PYG{n+nn}{typing} \PYG{k+kn}{import} \PYG{n}{Generator}
\PYG{k+kn}{from} \PYG{n+nn}{collections.abc} \PYG{k+kn}{import} \PYG{n}{Callable}


\PYG{k}{def} \PYG{n+nf}{run\PYGZus{}re\PYGZus{}finditer\PYGZus{}concurrently}\PYG{p}{(}\PYG{n}{pattern\PYGZus{}list}\PYG{p}{:} \PYG{n+nb}{list}\PYG{p}{,} \PYG{n}{text}\PYG{p}{:} \PYG{n+nb}{str}\PYG{p}{)} \PYG{o}{\PYGZhy{}\PYGZgt{}} \PYG{n}{Generator}\PYG{p}{:}
    \PYG{l+s+sd}{\PYGZdq{}\PYGZdq{}\PYGZdq{} The function here must have exactly one parameter. \PYGZdq{}\PYGZdq{}\PYGZdq{}}
    \PYG{k}{with} \PYG{p}{(}\PYG{n}{concurrent}\PYG{o}{.}\PYG{n}{futures}\PYG{o}{.}\PYG{n}{ThreadPoolExecutor}\PYG{p}{(}\PYG{n}{max\PYGZus{}workers}\PYG{o}{=}\PYG{n+nb}{len}\PYG{p}{(}\PYG{n}{pattern\PYGZus{}list}\PYG{p}{))}
          \PYG{k}{as} \PYG{n}{executor}\PYG{p}{):}
        \PYG{n}{future\PYGZus{}to\PYGZus{}result} \PYG{o}{=} \PYG{p}{[}\PYG{n}{executor}\PYG{o}{.}\PYG{n}{submit}\PYG{p}{(}\PYG{n}{re}\PYG{o}{.}\PYG{n}{finditer}\PYG{p}{,} \PYG{n}{pattern}\PYG{p}{,} \PYG{n}{text}\PYG{p}{)}
            \PYG{k}{for} \PYG{n}{pattern} \PYG{o+ow}{in} \PYG{n}{pattern\PYGZus{}list}\PYG{p}{]}
        \PYG{n}{futures\PYGZus{}done} \PYG{o}{=} \PYG{n}{concurrent}\PYG{o}{.}\PYG{n}{futures}\PYG{o}{.}\PYG{n}{as\PYGZus{}completed}\PYG{p}{(}\PYG{n}{fs}\PYG{o}{=}\PYG{n}{future\PYGZus{}to\PYGZus{}result}\PYG{p}{,}
            \PYG{n}{timeout}\PYG{o}{=}\PYG{k+kc}{None}\PYG{p}{)}
        \PYG{k}{for} \PYG{n}{future} \PYG{o+ow}{in} \PYG{n}{futures\PYGZus{}done}\PYG{p}{:}
            \PYG{k}{try}\PYG{p}{:}
                \PYG{n}{data} \PYG{o}{=} \PYG{n+nb}{list}\PYG{p}{(}\PYG{n}{future}\PYG{o}{.}\PYG{n}{result}\PYG{p}{())}
            \PYG{k}{except} \PYG{p}{(}\PYG{n+ne}{Exception}\PYG{p}{,} \PYG{n+ne}{TimeoutError}\PYG{p}{):}
                \PYG{n+nb}{print}\PYG{p}{(}\PYG{l+s+sa}{f}\PYG{l+s+s1}{\PYGZsq{}Fetching concurrent.future failed for future: }\PYG{l+s+si}{\PYGZob{}}\PYG{n}{future}\PYG{l+s+si}{\PYGZcb{}}\PYG{l+s+s1}{\PYGZsq{}}\PYG{p}{)}
            \PYG{k}{else}\PYG{p}{:}
                \PYG{k}{if} \PYG{n}{data} \PYG{o+ow}{is} \PYG{o+ow}{not} \PYG{k+kc}{None} \PYG{o+ow}{and} \PYG{n+nb}{len}\PYG{p}{(}\PYG{n}{data}\PYG{p}{)} \PYG{o}{\PYGZgt{}} \PYG{l+m+mi}{0}\PYG{p}{:}
                    \PYG{k}{yield} \PYG{n}{data}


\PYG{k}{def} \PYG{n+nf}{concurrent\PYGZus{}df\PYGZus{}apply}\PYG{p}{(}\PYG{n}{df}\PYG{p}{:} \PYG{n}{pd}\PYG{o}{.}\PYG{n}{DataFrame}\PYG{p}{,} \PYG{n}{function}\PYG{p}{:} \PYG{n}{Callable}\PYG{p}{,} \PYG{n}{df\PYGZus{}col\PYGZus{}name\PYGZus{}1}\PYG{p}{:} \PYG{n+nb}{str}\PYG{p}{,} \PYG{n}{df\PYGZus{}col\PYGZus{}name\PYGZus{}2}\PYG{p}{:} \PYG{n+nb}{str}\PYG{p}{,} \PYG{n}{name\PYGZus{}new\PYGZus{}col}\PYG{p}{:} \PYG{n+nb}{str}\PYG{p}{)} \PYG{o}{\PYGZhy{}\PYGZgt{}} \PYG{n}{pd}\PYG{o}{.}\PYG{n}{DataFrame}\PYG{p}{:}
    \PYG{k}{with} \PYG{n}{concurrent}\PYG{o}{.}\PYG{n}{futures}\PYG{o}{.}\PYG{n}{ThreadPoolExecutor}\PYG{p}{(}\PYG{n}{max\PYGZus{}workers}\PYG{o}{=}\PYG{n+nb}{len}\PYG{p}{(}\PYG{n}{df}\PYG{o}{.}\PYG{n}{index}\PYG{p}{))} \PYG{k}{as} \PYG{n}{executor}\PYG{p}{:}
        \PYG{n}{futures} \PYG{o}{=} \PYG{n}{executor}\PYG{o}{.}\PYG{n}{map}\PYG{p}{(}\PYG{n}{function}\PYG{p}{,} \PYG{n}{df}\PYG{p}{[}\PYG{n}{df\PYGZus{}col\PYGZus{}name\PYGZus{}1}\PYG{p}{],} \PYG{n}{df}\PYG{p}{[}\PYG{n}{df\PYGZus{}col\PYGZus{}name\PYGZus{}2}\PYG{p}{])}
        \PYG{n+nb}{print}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}type(futures):\PYGZsq{}}\PYG{p}{,} \PYG{n+nb}{type}\PYG{p}{(}\PYG{n}{futures}\PYG{p}{))}
        \PYG{k}{try}\PYG{p}{:}
            \PYG{n}{df}\PYG{p}{[}\PYG{n}{name\PYGZus{}new\PYGZus{}col}\PYG{p}{]} \PYG{o}{=} \PYG{n+nb}{list}\PYG{p}{(}\PYG{n}{futures}\PYG{p}{)}
        \PYG{k}{except} \PYG{p}{(}\PYG{n+ne}{Exception}\PYG{p}{,} \PYG{n+ne}{TimeoutError}\PYG{p}{):}
                \PYG{n+nb}{print}\PYG{p}{(}\PYG{l+s+sa}{f}\PYG{l+s+s1}{\PYGZsq{}Fetching concurrent.future failed.\PYGZsq{}}\PYG{p}{)}
        \PYG{k}{return} \PYG{n}{df}


\PYG{k}{if} \PYG{n+nv+vm}{\PYGZus{}\PYGZus{}name\PYGZus{}\PYGZus{}} \PYG{o}{==} \PYG{l+s+s1}{\PYGZsq{}\PYGZus{}\PYGZus{}main\PYGZus{}\PYGZus{}\PYGZsq{}}\PYG{p}{:}
    \PYG{n}{l} \PYG{o}{=} \PYG{p}{[}\PYG{l+m+mi}{1}\PYG{p}{,} \PYG{l+m+mi}{2}\PYG{p}{,} \PYG{l+m+mi}{3}\PYG{p}{]}
    \PYG{n}{m} \PYG{o}{=} \PYG{p}{[}\PYG{n}{ele}\PYG{o}{**}\PYG{l+m+mi}{2} \PYG{k}{for} \PYG{n}{ele} \PYG{o+ow}{in} \PYG{n}{l}\PYG{p}{]}
    \PYG{c+c1}{\PYGZsh{} print(m)}
    \PYG{n}{df} \PYG{o}{=} \PYG{n}{pd}\PYG{o}{.}\PYG{n}{DataFrame}\PYG{p}{(\PYGZob{}}\PYG{l+s+s1}{\PYGZsq{}l\PYGZsq{}}\PYG{p}{:} \PYG{n}{l}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}m\PYGZsq{}}\PYG{p}{:} \PYG{n}{m}\PYG{p}{\PYGZcb{})}
    \PYG{k+kn}{import} \PYG{n+nn}{time}
    \PYG{k+kn}{import} \PYG{n+nn}{random}

    \PYG{k}{def} \PYG{n+nf}{ret\PYGZus{}square}\PYG{p}{(}\PYG{n}{multiplicator}\PYG{p}{:} \PYG{n+nb}{int}\PYG{p}{,} \PYG{n}{num}\PYG{p}{:}\PYG{n+nb}{int}\PYG{p}{)} \PYG{o}{\PYGZhy{}\PYGZgt{}} \PYG{n+nb}{int}\PYG{p}{:}
        \PYG{n}{secs} \PYG{o}{=} \PYG{n}{random}\PYG{o}{.}\PYG{n}{randint}\PYG{p}{(}\PYG{l+m+mi}{2}\PYG{p}{,} \PYG{l+m+mi}{6}\PYG{p}{)}
        \PYG{n}{time}\PYG{o}{.}\PYG{n}{sleep}\PYG{p}{(}\PYG{n}{secs}\PYG{p}{)}
        \PYG{k}{return} \PYG{n}{multiplicator} \PYG{o}{*} \PYG{n}{num}

    \PYG{n}{df\PYGZus{}new} \PYG{o}{=} \PYG{n}{concurrent\PYGZus{}df\PYGZus{}apply}\PYG{p}{(}\PYG{n}{df}\PYG{o}{=}\PYG{n}{df}\PYG{p}{,} \PYG{n}{function}\PYG{o}{=}\PYG{n}{ret\PYGZus{}square}\PYG{p}{,} \PYG{n}{df\PYGZus{}col\PYGZus{}name\PYGZus{}1}\PYG{o}{=}\PYG{l+s+s1}{\PYGZsq{}l\PYGZsq{}}\PYG{p}{,} \PYG{n}{df\PYGZus{}col\PYGZus{}name\PYGZus{}2}\PYG{o}{=}\PYG{l+s+s1}{\PYGZsq{}m\PYGZsq{}}\PYG{p}{,} \PYG{n}{name\PYGZus{}new\PYGZus{}col}\PYG{o}{=}\PYG{l+s+s1}{\PYGZsq{}square\PYGZsq{}}\PYG{p}{)}
    \PYG{n+nb}{print}\PYG{p}{(}\PYG{n}{df\PYGZus{}new}\PYG{p}{)}



\end{Verbatim}
